<?xml version="1.0" encoding="utf-8" ?>
<helpItems xmlns="http://msh" schema="maml">
	<!-- Edited with: SAPIEN PowerShell HelpWriter 2016 v1.1.20-->
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Get-Approval</command:name>
			<maml:description>
				<maml:para>Gets a list of approvals for all releases for a team project.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>Approval</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-Approval function gets the approvals for all releases for a team
project. The project name is a Dynamic Parameter which may not be displayed
in the syntax above but is mandatory.

With just a project name, this function gets all of the pending approvals
for that team project.</maml:para>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-Approval</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
					<!--Dynamic-->
					<maml:name>ProjectName</maml:name>
					<maml:description>
						<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
					<maml:name>StatusFilter</maml:name>
					<maml:description>
						<maml:para>By default the function returns Pending approvals.  Using this filter you can return Approved, ReAssigned or Rejected approvals.  There is a custom table view for each status.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="">
					<maml:name>ReleaseIdFilter</maml:name>
					<maml:description>
						<maml:para>Onlt approvals for the release ids provided will be returned.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32[]</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="">
					<maml:name>AssignedToFilter</maml:name>
					<maml:description>
						<maml:para>Approvals are filtered to only those assigned to this user.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
				<maml:name>StatusFilter</maml:name>
				<maml:description>
					<maml:para>By default the function returns Pending approvals.  Using this filter you can return Approved, ReAssigned or Rejected approvals.  There is a custom table view for each status.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="">
				<maml:name>ReleaseIdFilter</maml:name>
				<maml:description>
					<maml:para>Onlt approvals for the release ids provided will be returned.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Int32[]</command:parameterValue>
				<dev:type>
					<maml:name>Int32[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="">
				<maml:name>AssignedToFilter</maml:name>
				<maml:description>
					<maml:para>Approvals are filtered to only those assigned to this user.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
				<!--Dynamic-->
				<maml:name>ProjectName</maml:name>
				<maml:description>
					<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!-- Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>You can pipe build defintion IDs to this function.</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!-- Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>Team.BuildDefinition</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!-- Notes-->
			<maml:title/>
			<maml:alert>
				<maml:para>This function has a Dynamic Parameter for ProjectName that specifies the
project for which this function gets build definitions.

You can tab complete from a list of avaiable projects.

You can use Set-DefaultProject to set a default project so you do not have
to pass the ProjectName with each call.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!-- Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Approval -ProjectName Demo</dev:code>
				<dev:remarks>
					<maml:para>This command gets a list of all pending approvals.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Approval -ProjectName Demo -StatusFilter Approved | Format-Table -View Approved</dev:code>
				<dev:remarks>
					<maml:para>This command gets a list of all approved approvals using a custom table format.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Approval -ProjectName Demo -AssignedToFilter Administrator -StatusFilter Rejected | FT -View Rejected</dev:code>
				<dev:remarks>
					<maml:para>This command gets a list of all approvals rejected by Administrator using a custom table format.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!-- Links-->
			<maml:navigationLink>
				<maml:linkText>Add-TeamAccount
Set-DefaultProject
Add-BuildDefinition
Remove-BuildDefinition</maml:linkText>
				<maml:uri/>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Add-AzureRMServiceEndpoint</command:name>
			<maml:description>
				<maml:para/>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Add</command:verb>
			<command:noun>AzureRMServiceEndpoint</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para/>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Add-AzureRMServiceEndpoint</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
					<!--Dynamic-->
					<maml:name>ProjectName</maml:name>
					<maml:description>
						<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0">
					<maml:name>DisplayName</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="1">
					<maml:name>SubscriptionId</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="2">
					<maml:name>SubscriptionTenantId</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
					<maml:name>EndpointName</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para/>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="1">
				<maml:name>SubscriptionId</maml:name>
				<maml:description>
					<maml:para/>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="2">
				<maml:name>SubscriptionTenantId</maml:name>
				<maml:description>
					<maml:para/>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
				<maml:name>EndpointName</maml:name>
				<maml:description>
					<maml:para/>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
				<!--Dynamic-->
				<maml:name>ProjectName</maml:name>
				<maml:description>
					<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!-- Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String
					</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!-- Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Add-Release</command:name>
			<maml:description>
				<maml:para>Creates a new release defintion from a JSON file.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Add</command:verb>
			<command:noun>Release</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Reads a JSON file off disk and uses that file to create a new release defintion
in the provided project.

You must call Add-TeamAccount before calling this function.</maml:para>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Add-Release</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
					<!--Dynamic-->
					<maml:name>ProjectName</maml:name>
					<maml:description>
						<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Description</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Name</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>SourceBranch</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>ArtifactAlias</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>DefinitionId</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>BuildId</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Force</maml:name>
					<maml:description>
						<maml:para>Forces the command without confirmation</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Add-Release</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
					<!--Dynamic-->
					<maml:name>ProjectName</maml:name>
					<maml:description>
						<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Description</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Name</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>SourceBranch</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Force</maml:name>
					<maml:description>
						<maml:para>Forces the command without confirmation</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named">
					<!--Dynamic-->
					<maml:name>DefinitionName</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named">
					<!--Dynamic-->
					<maml:name>BuildNumber</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DefinitionId</maml:name>
				<maml:description>
					<maml:para/>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>0</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para/>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ArtifactAlias</maml:name>
				<maml:description>
					<maml:para/>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para/>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>BuildId</maml:name>
				<maml:description>
					<maml:para/>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
				<!--Dynamic-->
				<maml:name>ProjectName</maml:name>
				<maml:description>
					<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named">
				<!--Dynamic-->
				<maml:name>DefinitionName</maml:name>
				<maml:description>
					<maml:para/>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SourceBranch</maml:name>
				<maml:description>
					<maml:para/>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Forces the command without confirmation</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named">
				<!--Dynamic-->
				<maml:name>BuildNumber</maml:name>
				<maml:description>
					<maml:para/>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!-- Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<maml:alertSet>
			<!-- Notes-->
			<maml:title/>
			<maml:alert>
				<maml:para>This function has a Dynamic Parameter for ProjectName that specifies the
project for which this function gets release s.

You can tab complete from a list of avaiable projects.

You can use Set-DefaultProject to set a default project so you do not have
to pass the ProjectName with each call.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!-- Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>get-build | ft id,name

id name
-- ----
44 Demo-CI-44


PS C:\&gt;Get-ReleaseDefinition -Expand artifacts | ft id,name,@{l=&apos;Alais&apos;;e={$_.artifacts[0].alias}}

id name    Alais
-- ----    -----
 1 Demo-CD Demo-CI


PS C:\&gt;Add-Release -DefinitionId 1 -Description Test -ArtifactAlias Demo-CI -BuildId 44</dev:code>
				<dev:remarks>
					<maml:para>This example shows how to find the Build ID, Artifact Alias, and Release Defintion ID required to start a release.  If you call Set-DefaultProject you can use Example 2 which is much easier.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Add-Release -DefinitionName Demo-CD -Description Test -BuildNumber Demo-CI-44</dev:code>
				<dev:remarks>
					<maml:para>This command starts a new release using the Demo-CD release defintion and the build with build number Demo-CI-44.

You must set a default project to tab complete DefinitionName and BuildNumber.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<!-- Generated by: SAPIEN PowerShell HelpWriter 2016 v1.1.20-->
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Set-Approval</command:name>
			<maml:description>
				<maml:para>Sets the status of approval to Approved, Rejected, Pending, or ReAssigned.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Set</command:verb>
			<command:noun>Approval</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Set-Approval sets the status of approval to Approved, Rejected, Pending, or ReAssigned.</maml:para>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Set-Approval</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
					<!--Dynamic-->
					<maml:name>ProjectName</maml:name>
					<maml:description>
						<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
					<maml:name>Id</maml:name>
					<maml:description>
						<maml:para>Specifies the approval IDs of the approvals to set.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="">
					<maml:name>Status</maml:name>
					<maml:description>
						<maml:para>Specifies the status to set for the approval.

Valid values: &apos;Approved&apos;, &apos;Rejected&apos;, &apos;Pending&apos;, &apos;ReAssigned&apos;</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>Approved</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="">
					<maml:name>Approver</maml:name>
					<maml:description>
						<maml:para>Specifies the user to whom the approval has been re-assigned to
Alias of the user. chuckreinhart@outlook.com, for example.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="">
					<maml:name>Comment</maml:name>
					<maml:description>
						<maml:para>Specifies the comment to be stored with this approval.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Force</maml:name>
					<maml:description>
						<maml:para>Sets the status without prompting for confirmation.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
				<!--Dynamic-->
				<maml:name>ProjectName</maml:name>
				<maml:description>
					<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies the approval IDs of the approvals to set.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
				<dev:type>
					<maml:name>Int32[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="">
				<maml:name>Status</maml:name>
				<maml:description>
					<maml:para>Specifies the status to set for the approval.

Valid values: &apos;Approved&apos;, &apos;Rejected&apos;, &apos;Pending&apos;, &apos;ReAssigned&apos;</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>Approved</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="">
				<maml:name>Approver</maml:name>
				<maml:description>
					<maml:para>Specifies the user to whom the approval has been re-assigned to
Alias of the user. chuckreinhart@outlook.com, for example.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="">
				<maml:name>Comment</maml:name>
				<maml:description>
					<maml:para>Specifies the comment to be stored with this approval.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Sets the status without prompting for confirmation.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!-- Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.Int32[]
System.String
					</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!-- Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!-- Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Approval | Set-Approval</dev:code>
				<dev:remarks>
					<maml:para>This command sets all pending approvals to approved.

					</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Set-Approval -Id 1 -Status Rejected</dev:code>
				<dev:remarks>
					<maml:para>This command rejects approval with Id of 1.

					</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Add-BuildDefinition</command:name>
			<maml:description>
				<maml:para>Creates a new build defintion from a JSON file.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Add</command:verb>
			<command:noun>BuildDefinition</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Reads a JSON file off disk and uses that file to create a new build defintion
in the provided project.

You must call Add-TeamAccount before calling this function.</maml:para>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Add-BuildDefinition</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
					<!--Dynamic-->
					<maml:name>ProjectName</maml:name>
					<maml:description>
						<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0">
					<maml:name>InFile</maml:name>
					<maml:description>
						<maml:para>Specifies the JSON file that contains the build defintion to be created. Enter
a path and file name.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0">
				<maml:name>InFile</maml:name>
				<maml:description>
					<maml:para>Specifies the JSON file that contains the build defintion to be created. Enter
a path and file name.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
				<!--Dynamic-->
				<maml:name>ProjectName</maml:name>
				<maml:description>
					<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!-- Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<maml:alertSet>
			<!-- Notes-->
			<maml:title/>
			<maml:alert>
				<maml:para>This function has a Dynamic Parameter for ProjectName that specifies the
project for which this function gets build definitions.

You can tab complete from a list of avaiable projects.

You can use Set-DefaultProject to set a default project so you do not have
to pass the ProjectName with each call.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!-- Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Add-BuildDefinition -ProjectName Demo -InFile build.json</dev:code>
				<dev:remarks>
					<maml:para>This command reads build.json and creates a new build defintion from it
on the demo team project.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Get-BuildDefinition</command:name>
			<maml:description>
				<maml:para>Gets the build defintions for a team project.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>BuildDefinition</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-BuildDefinition function gets the build defintions for a team
project. The project name is a Dynamic Parameter which may not be displayed
in the syntax above but is mandatory.

With just a project name, this function gets all of the build definitions
for that team project. You can also specify a particular build defintion
by ID.</maml:para>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-BuildDefinition</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
					<!--Dynamic-->
					<maml:name>ProjectName</maml:name>
					<maml:description>
						<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Filter</maml:name>
					<maml:description>
						<maml:para>Filters to definitions whose names equal this value. Append a * to filter to
definitions whose names start with this value. For example: MS*.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Type</maml:name>
					<maml:description>
						<maml:para>The type of the build definitions to retrieve (build, xaml). If not
specified, all types will be returned.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-BuildDefinition</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
					<!--Dynamic-->
					<maml:name>ProjectName</maml:name>
					<maml:description>
						<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="BuildDefinitionID">
					<maml:name>Id</maml:name>
					<maml:description>
						<maml:para>Specifies one or more build defintions by ID. To specify multiple IDs, use
commas to separate the IDs. To find the ID of a build defintion, type
Get-BuildDefinition.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Revision</maml:name>
					<maml:description>
						<maml:para>Specifies the specific revision number of the definition to retrieve.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Filters to definitions whose names equal this value. Append a * to filter to
definitions whose names start with this value. For example: MS*.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>The type of the build definitions to retrieve (build, xaml). If not
specified, all types will be returned.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>All</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
				<!--Dynamic-->
				<maml:name>ProjectName</maml:name>
				<maml:description>
					<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="BuildDefinitionID">
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies one or more build defintions by ID. To specify multiple IDs, use
commas to separate the IDs. To find the ID of a build defintion, type
Get-BuildDefinition.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
				<dev:type>
					<maml:name>Int32[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Revision</maml:name>
				<maml:description>
					<maml:para>Specifies the specific revision number of the definition to retrieve.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>-1</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!-- Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>You can pipe build defintion IDs to this function.</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!-- Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>Team.BuildDefinition</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!-- Notes-->
		</maml:alertSet>
		<command:examples>
			<!-- Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-BuildDefinition -ProjectName Demo | Format-List *</dev:code>
				<dev:remarks>
					<maml:para>This command gets a list of all build definitions in the demo project. The
pipeline operator (|) passes the data to the Format-List cmdlet, which
displays all available properties (*) of the build defintion objects.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!-- Links-->
			<maml:navigationLink>
				<maml:linkText>Add-TeamAccount
Set-DefaultProject
Add-BuildDefinition
Remove-BuildDefinition</maml:linkText>
				<maml:uri/>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Remove-BuildDefinition</command:name>
			<maml:description>
				<maml:para>Removes the build defintions for a team project.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Remove</command:verb>
			<command:noun>BuildDefinition</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Remove-BuildDefinition function removes the build defintions for a
team project. The project name is a Dynamic Parameter which may not be
displayed in the syntax above but is mandatory.</maml:para>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Remove-BuildDefinition</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
					<!--Dynamic-->
					<maml:name>ProjectName</maml:name>
					<maml:description>
						<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0">
					<maml:name>Id</maml:name>
					<maml:description>
						<maml:para>Specifies one or more build defintions by ID. To specify multiple IDs, use
commas to separate the IDs. To find the ID of a build defintion, type
Get-BuildDefinition.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Force</maml:name>
					<maml:description>
						<maml:para>Removes the specified build defintion without prompting for confirmation.
By default, Remove-BuildDefinition prompts for confirmation before
removing any build defintion.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0">
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies one or more build defintions by ID. To specify multiple IDs, use
commas to separate the IDs. To find the ID of a build defintion, type
Get-BuildDefinition.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
				<dev:type>
					<maml:name>Int32[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Removes the specified build defintion without prompting for confirmation.
By default, Remove-BuildDefinition prompts for confirmation before
removing any build defintion.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
				<!--Dynamic-->
				<maml:name>ProjectName</maml:name>
				<maml:description>
					<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!-- Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>You can pipe build defintion IDs to this function.</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!-- Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!-- Notes-->
			<maml:title/>
			<maml:alert>
				<maml:para>This function has a Dynamic Parameter for ProjectName that specifies the
project for which this function gets build definitions.

You can tab complete from a list of avaiable projects.

You can use Set-DefaultProject to set a default project so you do not have
to pass the ProjectName with each call.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!-- Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-BuildDefinition -ProjectName Demo | Remove-BuildDefinition</dev:code>
				<dev:remarks>
					<maml:para>This command gets a list of all build definitions in the demo project. The
pipeline operator (|) passes the data to the Remove-BuildDefinition
function, which removes each build defintion object.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!-- Links-->
			<maml:navigationLink>
				<maml:linkText>Add-TeamAccount
Set-DefaultProject
Add-BuildDefinition
Get-BuildDefinition</maml:linkText>
				<maml:uri/>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Get-Build</command:name>
			<maml:description>
				<maml:para>Gets the builds for a team project.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>Build</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-Build function gets the builds for a team project.

With just a project name, this function gets all of the builds for that team
project. You can also specify a particular build by ID.</maml:para>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-Build</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
					<!--Dynamic-->
					<maml:name>ProjectName</maml:name>
					<maml:description>
						<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Top</maml:name>
					<maml:description>
						<maml:para>Specifies the maximum number of builds to return.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>ResultFilter</maml:name>
					<maml:description>
						<maml:para>Specifies the result of the builds to return Succeeded, PartiallySucceeded,
Failed, or Canceled.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>ReasonFilter</maml:name>
					<maml:description>
						<maml:para>Specifies the reason the build was created of the builds to return Manual,
IndividualCI, BatchedCI, Schedule, UserCreated, ValidateShelveset,
CheckInShelveset, Triggered, or All.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>StatusFilter</maml:name>
					<maml:description>
						<maml:para>Specifies the status of the builds to return InProgress, Completed,
Cancelling, Postponed, NotStarted, or All.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Queues</maml:name>
					<maml:description>
						<maml:para>A comma-delimited list of queue IDs that specifies the builds to return.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32[]</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Definitions</maml:name>
					<maml:description>
						<maml:para>A comma-delimited list of build definition IDs that specifies the builds
to return.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32[]</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>BuildNumber</maml:name>
					<maml:description>
						<maml:para>Returns the build with this build number. You can also use * for a starts
with search i.e. 2015* will return all build numbers that start with 2015.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Type</maml:name>
					<maml:description>
						<maml:para>The type of builds to retrieve.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>MaxBuildsPerDefinition</maml:name>
					<maml:description>
						<maml:para>The maximum number of builds to retrieve for each definition. This is only
valid when definitions is also specified.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Properties</maml:name>
					<maml:description>
						<maml:para>A comma-delimited list of extended properties to retrieve.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-Build</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
					<!--Dynamic-->
					<maml:name>ProjectName</maml:name>
					<maml:description>
						<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="BuildID">
					<maml:name>Id</maml:name>
					<maml:description>
						<maml:para>Specifies one or more builds by ID. To specify multiple IDs, use commas to
separate the IDs. To find the ID of a build, type Get-Build.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32[]</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Top</maml:name>
				<maml:description>
					<maml:para>Specifies the maximum number of builds to return.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>0</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>ResultFilter</maml:name>
				<maml:description>
					<maml:para>Specifies the result of the builds to return Succeeded, PartiallySucceeded,
Failed, or Canceled.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>ReasonFilter</maml:name>
				<maml:description>
					<maml:para>Specifies the reason the build was created of the builds to return Manual,
IndividualCI, BatchedCI, Schedule, UserCreated, ValidateShelveset,
CheckInShelveset, Triggered, or All.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>StatusFilter</maml:name>
				<maml:description>
					<maml:para>Specifies the status of the builds to return InProgress, Completed,
Cancelling, Postponed, NotStarted, or All.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Queues</maml:name>
				<maml:description>
					<maml:para>A comma-delimited list of queue IDs that specifies the builds to return.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Int32[]</command:parameterValue>
				<dev:type>
					<maml:name>Int32[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Definitions</maml:name>
				<maml:description>
					<maml:para>A comma-delimited list of build definition IDs that specifies the builds
to return.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Int32[]</command:parameterValue>
				<dev:type>
					<maml:name>Int32[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="true" pipelineInput="false" position="named" aliases="">
				<maml:name>BuildNumber</maml:name>
				<maml:description>
					<maml:para>Returns the build with this build number. You can also use * for a starts
with search i.e. 2015* will return all build numbers that start with 2015.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>The type of builds to retrieve.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MaxBuildsPerDefinition</maml:name>
				<maml:description>
					<maml:para>The maximum number of builds to retrieve for each definition. This is only
valid when definitions is also specified.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>0</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>A comma-delimited list of extended properties to retrieve.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
				<!--Dynamic-->
				<maml:name>ProjectName</maml:name>
				<maml:description>
					<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="named" aliases="BuildID">
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies one or more builds by ID. To specify multiple IDs, use commas to
separate the IDs. To find the ID of a build, type Get-Build.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Int32[]</command:parameterValue>
				<dev:type>
					<maml:name>Int32[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!-- Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>You can pipe build IDs to this function.</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!-- Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>Team.Build</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!-- Notes-->
			<maml:title/>
			<maml:alert>
				<maml:para>This function has a Dynamic Parameter for ProjectName that specifies the
project for which this function gets builds.

You can tab complete from a list of avaiable projects.

You can use Set-DefaultProject to set a default project so you do not have
to pass the ProjectName with each call.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!-- Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Build -ProjectName demo | Format-List *</dev:code>
				<dev:remarks>
					<maml:para>This command gets a list of all builds in the demo project. The
pipeline operator (|) passes the data to the Format-List cmdlet, which
displays all available properties (*) of the build objects.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Build -ProjectName demo -top 5 -resultFilter failed</dev:code>
				<dev:remarks>
					<maml:para>This command gets a list of 5 failed builds in the demo project.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>1203,1204 | Get-Build -ProjectName demo</dev:code>
				<dev:remarks>
					<maml:para>This command gets builds with IDs 1203 and 1204 by using the pipeline.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Build -ProjectName demo -ID 1203,1204</dev:code>
				<dev:remarks>
					<maml:para>This command gets builds with IDs 1203 and 1204 by using the ID parameter.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!-- Links-->
			<maml:navigationLink>
				<maml:linkText>Add-TeamAccount
Set-DefaultProject
Add-Build
Remove-Build</maml:linkText>
				<maml:uri/>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Add-Build</command:name>
			<maml:description>
				<maml:para>Queues a new build.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Add</command:verb>
			<command:noun>Build</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Add-Build will queue a new build. You can override the queue in the build defintion by using the QueueName parameter.

To have the BuildDefinition and QueueNames tab complete you must set a default project by calling Set-DefaultProject before you call Add-Build.</maml:para>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Add-Build</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
					<!--Dynamic-->
					<maml:name>ProjectName</maml:name>
					<maml:description>
						<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="">
					<!--Dynamic-->
					<maml:name>BuildDefinition</maml:name>
					<maml:description>
						<maml:para>The name of the build defintion to use to queue to build.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="">
					<!--Dynamic-->
					<maml:name>QueueName</maml:name>
					<maml:description>
						<maml:para>The name of the queue to use for this build.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
				<!--Dynamic-->
				<maml:name>ProjectName</maml:name>
				<maml:description>
					<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="">
				<!--Dynamic-->
				<maml:name>BuildDefinition</maml:name>
				<maml:description>
					<maml:para>The name of the build defintion to use to queue to build.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="">
				<!--Dynamic-->
				<maml:name>QueueName</maml:name>
				<maml:description>
					<maml:para>The name of the queue to use for this build.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!-- Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para>Build Defintion Name</maml:para>
				</maml:description>
			</command:inputType>
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para>Queue Name</maml:para>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!-- Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>Team-Build</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para>The team build just created.

Build Definition Build Number  Status     Result
---------------- ------------  ------     ------
Demo-CI           Demo-CI-45   notStarted</maml:para>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<maml:title>Dynamic Parameters</maml:title>
			<!-- Notes-->
			<maml:alert>
				<maml:para>BuildDefinition and QueueName are dynamic parameters and use the default project value to query their validate set.  If you do not set the default project by called Set-DefaultProject before calling Add-Build you will have to type in the names.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!-- Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Set-DefaultProject Demo
PS C:\&gt;Add-Build -BuildDefinition Demo-CI</dev:code>
				<dev:remarks>
					<maml:para>This exmaple sets the default project so you can tab complete the BuildDefinition parameter.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Remove-Build</command:name>
			<maml:description>
				<maml:para/>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Remove</command:verb>
			<command:noun>Build</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para/>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Remove-Build</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
					<!--Dynamic-->
					<maml:name>ProjectName</maml:name>
					<maml:description>
						<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="">
					<maml:name>Id</maml:name>
					<maml:description>
						<maml:para>Specifies one or more builds by ID. To specify multiple IDs, 
use commas to separate the IDs. To find the ID of a build,
type Get-Build.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Force</maml:name>
					<maml:description>
						<maml:para>Sets the status without prompting for confirmation.
By default, Remove-Build prompts for confirmation before removing
any build.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="">
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies one or more builds by ID. To specify multiple IDs, 
use commas to separate the IDs. To find the ID of a build,
type Get-Build.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
				<dev:type>
					<maml:name>Int32[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Sets the status without prompting for confirmation.
By default, Remove-Build prompts for confirmation before removing
any build.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
				<!--Dynamic-->
				<maml:name>ProjectName</maml:name>
				<maml:description>
					<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!-- Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.Int32[]
System.String
					</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!-- Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!-- Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Build | Remove-Build -Force</dev:code>
				<dev:remarks>
					<maml:para>This command will delete all builds that are not marked retain indefinitely.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Get-CloudSubscription</command:name>
			<maml:description>
				<maml:para>Gets the Azure subscriptions associated with the Team Services account.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>CloudSubscription</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-CloudSubscription function gets the Azure subscriptions
associated with the Team Services account.</maml:para>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-CloudSubscription</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
		</command:parameters>
		<command:inputTypes>
			<!-- Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!-- Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>Team.AzureSubscription</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<maml:title>TFS Support</maml:title>
			<!-- Notes-->
			<maml:alert>
				<maml:para>This function currently is not supported in TFS.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!-- Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-CloudSubscription</dev:code>
				<dev:remarks>
					<maml:para>This command gets a list of all Azure subscriptions associated with the
Team Services account.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!-- Links-->
			<maml:navigationLink>
				<maml:linkText>Add-TeamAccount</maml:linkText>
				<maml:uri/>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Get-Pool</command:name>
			<maml:description>
				<maml:para/>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>Pool</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para/>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-Pool</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>PoolName</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>ActionFilter</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-Pool</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="PoolID">
					<maml:name>Id</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PoolName</maml:name>
				<maml:description>
					<maml:para/>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ActionFilter</maml:name>
				<maml:description>
					<maml:para/>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="PoolID">
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para/>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!-- Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String
					</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!-- Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Get-Project</command:name>
			<maml:description>
				<maml:para>Returns a list of projects in the Team Services or Team Foundation Server account.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>Project</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The list of projects returned can be controlled by using the stateFilter, top
and skip parameters.

You can also get a single project by name or id.

You must call Add-TeamAccount before calling this function.</maml:para>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-Project</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>StateFilter</maml:name>
					<maml:description>
						<maml:para>Returns team projects in a specific team project state of WellFormed, CreatePending, Deleting, New,
or All. If you do not provide a value the default is WellFormed.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Top</maml:name>
					<maml:description>
						<maml:para>Defines the number of team projects to return.  The default value is 100</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Skip</maml:name>
					<maml:description>
						<maml:para>Defines the number of team projects to skip.  The default value is 0</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-Project</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="ProjectID">
					<maml:name>Id</maml:name>
					<maml:description>
						<maml:para>The id of the project to return</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>IncludeCapabilites</maml:name>
					<maml:description>
						<maml:para>Will return additional information about the project</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-Project</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0">
					<!--Dynamic-->
					<maml:name>Name</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>StateFilter</maml:name>
				<maml:description>
					<maml:para>Returns team projects in a specific team project state of WellFormed, CreatePending, Deleting, New,
or All. If you do not provide a value the default is WellFormed.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>WellFormed</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Top</maml:name>
				<maml:description>
					<maml:para>Defines the number of team projects to return.  The default value is 100</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>100</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Skip</maml:name>
				<maml:description>
					<maml:para>Defines the number of team projects to skip.  The default value is 0</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>0</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="ProjectID">
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>The id of the project to return</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludeCapabilites</maml:name>
				<maml:description>
					<maml:para>Will return additional information about the project</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0">
				<!--Dynamic-->
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para/>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!-- Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:examples>
			<!-- Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Project</dev:code>
				<dev:remarks>
					<maml:para>This will return all the WellFormed team projects.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Project -top 5 | Format-Wide</dev:code>
				<dev:remarks>
					<maml:para>This will return the top five WellFormed team projects only showing their name</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!-- Links-->
			<maml:navigationLink>
				<maml:linkText>Add-TeamAccount
Add-Project
Remove-Project</maml:linkText>
				<maml:uri/>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<!--
		 Module: 		Team
		 Version:		0.1.9
	-->
	<!-- All Commands-->
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Add-ReleaseDefinition</command:name>
			<maml:description>
				<maml:para>Creates a new release defintion from a JSON file.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Add</command:verb>
			<command:noun>ReleaseDefinition</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Reads a JSON file off disk and uses that file to create a new release defintion
in the provided project.

You must call Add-TeamAccount before calling this function.</maml:para>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Add-ReleaseDefinition</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
					<!--Dynamic-->
					<maml:name>ProjectName</maml:name>
					<maml:description>
						<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0">
					<maml:name>InFile</maml:name>
					<maml:description>
						<maml:para>Specifies the JSON file that contains the release defintion to be created. Enter
a path and file name.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0">
				<maml:name>InFile</maml:name>
				<maml:description>
					<maml:para>Specifies the JSON file that contains the release defintion to be created. Enter
a path and file name.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
				<!--Dynamic-->
				<maml:name>ProjectName</maml:name>
				<maml:description>
					<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!-- Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<maml:alertSet>
			<!-- Notes-->
			<maml:title/>
			<maml:alert>
				<maml:para>This function has a Dynamic Parameter for ProjectName that specifies the
project for which this function gets release definitions.

You can tab complete from a list of avaiable projects.

You can use Set-DefaultProject to set a default project so you do not have
to pass the ProjectName with each call.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!-- Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Add-ReleaseDefinition -ProjectName demo -inFile release.json</dev:code>
				<dev:remarks>
					<maml:para>This command reads release.json and creates a new release defintion from it
on the demo team project.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Get-Release</command:name>
			<maml:description>
				<maml:para>Gets the releases for a team project.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>Release</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-Release function gets the releases for a team
project. The project name is a Dynamic Parameter which may not be displayed
in the syntax above but is mandatory.

With just a project name, this function gets all of the release s
for that team project. You can also specify a particular release defintion
by ID.</maml:para>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-Release</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
					<!--Dynamic-->
					<maml:name>ProjectName</maml:name>
					<maml:description>
						<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Expand</maml:name>
					<maml:description>
						<maml:para>Specifies which property should be expanded in the list of Release
 (environments, artifacts, none).</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>StatusFilter</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>DefinitionId</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Top</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>CreatedBy</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>MinCreatedTime</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">DateTime</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>MaxCreatedTime</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">DateTime</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>QueryOrder</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>ContinuationToken</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-Release</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
					<!--Dynamic-->
					<maml:name>ProjectName</maml:name>
					<maml:description>
						<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="ReleaseID">
					<maml:name>Id</maml:name>
					<maml:description>
						<maml:para>Specifies one or more releases by ID. To specify multiple IDs, use
commas to separate the IDs. To find the ID of a release defintion, type
Get-Release.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32[]</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Expand</maml:name>
				<maml:description>
					<maml:para>Specifies which property should be expanded in the list of Release
 (environments, artifacts, none).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>StatusFilter</maml:name>
				<maml:description>
					<maml:para/>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DefinitionId</maml:name>
				<maml:description>
					<maml:para/>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>0</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Top</maml:name>
				<maml:description>
					<maml:para/>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>0</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreatedBy</maml:name>
				<maml:description>
					<maml:para/>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MinCreatedTime</maml:name>
				<maml:description>
					<maml:para/>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">DateTime</command:parameterValue>
				<dev:type>
					<maml:name>DateTime</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MaxCreatedTime</maml:name>
				<maml:description>
					<maml:para/>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">DateTime</command:parameterValue>
				<dev:type>
					<maml:name>DateTime</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>QueryOrder</maml:name>
				<maml:description>
					<maml:para/>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ContinuationToken</maml:name>
				<maml:description>
					<maml:para/>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
				<!--Dynamic-->
				<maml:name>ProjectName</maml:name>
				<maml:description>
					<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="ReleaseID">
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies one or more releases by ID. To specify multiple IDs, use
commas to separate the IDs. To find the ID of a release defintion, type
Get-Release.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Int32[]</command:parameterValue>
				<dev:type>
					<maml:name>Int32[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!-- Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>You can pipe release defintion IDs to this function.</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!-- Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>Team.Release</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!-- Notes-->
			<maml:title/>
			<maml:alert>
				<maml:para>This function has a Dynamic Parameter for ProjectName that specifies the
project for which this function gets release s.

You can tab complete from a list of avaiable projects.

You can use Set-DefaultProject to set a default project so you do not have
to pass the ProjectName with each call.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!-- Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Release -ProjectName demo | Format-List *</dev:code>
				<dev:remarks>
					<maml:para>This command gets a list of all release s in the demo project. The
pipeline operator (|) passes the data to the Format-List cmdlet, which
displays all available properties (*) of the release defintion objects.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!-- Links-->
			<maml:navigationLink>
				<maml:linkText>Add-TeamAccount
Set-DefaultProject
Add-Release
Remove-Release</maml:linkText>
				<maml:uri/>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Add-Project</command:name>
			<maml:description>
				<maml:para>Adds a Team Project to your Team Services account.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Add</command:verb>
			<command:noun>Project</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>This will create a new Team Project in your Team Services
account.</maml:para>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Add-Project</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
					<maml:name>Name</maml:name>
					<maml:description>
						<maml:para>The name of the project to create.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
					<maml:name>ProcessTemplate</maml:name>
					<maml:description>
						<maml:para>The name of the process template to use for the project. The valid values are
Agile, Scrum or CMMI.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
					<maml:name>Description</maml:name>
					<maml:description>
						<maml:para>The description of the team project.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>TFVC</maml:name>
					<maml:description>
						<maml:para>Switches the source control from Git to TFVC.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>The name of the project to create.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>ProcessTemplate</maml:name>
				<maml:description>
					<maml:para>The name of the process template to use for the project. The valid values are
Agile, Scrum or CMMI.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>Scrum</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>The description of the team project.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TFVC</maml:name>
				<maml:description>
					<maml:para>Switches the source control from Git to TFVC.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:examples>
			<!-- Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Add-Project &#39;MyProject&#39;</dev:code>
				<dev:remarks>
					<maml:para>This will add a project name MyProject with no description using the Scrum process
template and Git source control.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Add-Project &#39;MyProject&#39; -TFVC -ProcessTemplate Agile</dev:code>
				<dev:remarks>
					<maml:para>This will add a project name MyProject with no description using the Agile process
template and TFVC source control.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!-- Links-->
			<maml:navigationLink>
				<maml:linkText>Add-TeamAccount
Remove-Project</maml:linkText>
				<maml:uri/>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Add-TeamAccount</command:name>
			<maml:description>
				<maml:para>Stores your account name and personal access token for use with the other
functions in this module.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Add</command:verb>
			<command:noun>TeamAccount</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>On Windows you have to option to store the information at the process, user
or machine (you must be running PowerShell as administrator) level. On Linux
and Mac you can only store at the process level.</maml:para>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Add-TeamAccount</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
					<maml:name>Account</maml:name>
					<maml:description>
						<maml:para>The Visual Studio Team Services (VSTS) account name to use. DO NOT enter the
entire URL.  Just the portion before visualstudio.com. For example in the
following url mydemos is the account name.
https://mydemos.visualstudio.com
or
The full Team Foundation Server (TFS) url including the collection.
http://localhost:8080/tfs/DefaultCollection</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>PAT</maml:name>
					<maml:description>
						<maml:para>A secured string to capture your personal access token.  This will allow you
to provide your personal access token without displaying it in plain text.

To use pat simply omit it from the Add-TeamAccount command.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<!--Dynamic-->
					<maml:name>Level</maml:name>
					<maml:description>
						<maml:para>On Windows allows you to store your account information at the Process, User or Machine levels.  When saved at the User or Machine level your account information will be in any future PowerShell processes.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Add-TeamAccount</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
					<maml:name>PersonalAccessToken</maml:name>
					<maml:description>
						<maml:para>The personal access token from VSTS/TFS to use to access this account.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Account</maml:name>
					<maml:description>
						<maml:para>The Visual Studio Team Services (VSTS) account name to use. DO NOT enter the
entire URL.  Just the portion before visualstudio.com. For example in the
following url mydemos is the account name.
https://mydemos.visualstudio.com
or
The full Team Foundation Server (TFS) url including the collection.
http://localhost:8080/tfs/DefaultCollection</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<!--Dynamic-->
					<maml:name>Level</maml:name>
					<maml:description>
						<maml:para>On Windows allows you to store your account information at the Process, User or Machine levels.  When saved at the User or Machine level your account information will be in any future PowerShell processes.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Add-TeamAccount</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Account</maml:name>
					<maml:description>
						<maml:para>
              The Visual Studio Team Services (VSTS) account name to use. DO NOT enter the
              entire URL.  Just the portion before visualstudio.com. For example in the
              following url mydemos is the account name.
              https://mydemos.visualstudio.com
              or
              The full Team Foundation Server (TFS) url including the collection.
              http://localhost:8080/tfs/DefaultCollection
						</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<!--Dynamic-->
					<maml:name>UseWindowsAuthentication</maml:name>
					<maml:description>
						<maml:para>Allows the use of the current user&apos;s Windows credentials to authenticate against a local TFS.</maml:para>
					</maml:description>
					<command:parameterValue required="false">SwitchParameter</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Account</maml:name>
				<maml:description>
					<maml:para>The Visual Studio Team Services (VSTS) account name to use. DO NOT enter the
entire URL.  Just the portion before visualstudio.com. For example in the
following url mydemos is the account name.
https://mydemos.visualstudio.com
or
The full Team Foundation Server (TFS) url including the collection.
http://localhost:8080/tfs/DefaultCollection</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>PAT</maml:name>
				<maml:description>
					<maml:para>A secured string to capture your personal access token.  This will allow you
to provide your personal access token without displaying it in plain text.

To use pat simply omit it from the Add-TeamAccount command.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
				<dev:type>
					<maml:name>SecureString</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<!--Dynamic-->
				<maml:name>Level</maml:name>
				<maml:description>
					<maml:para>On Windows allows you to store your account information at the Process, User or Machine levels.  When saved at the User or Machine level your account information will be in any future PowerShell processes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>PersonalAccessToken</maml:name>
				<maml:description>
					<maml:para>The personal access token from VSTS/TFS to use to access this account.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<!--Dynamic-->
				<maml:name>UseWindowsAuthentication</maml:name>
				<maml:description>
					<maml:para>Allows the use of the current user&apos;s Windows credentials to authenticate against a local TFS.</maml:para>
				</maml:description>
				<command:parameterValue required="false">SwitchParameter</command:parameterValue>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:examples>
			<!-- Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Add-TeamAccount</dev:code>
				<dev:remarks>
					<maml:para>You will be prompted for the account name and personal access token.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Add-TeamAccount -Account mydemos -PersonalAccessToken 7a8ilh6db4aforlrnrqmdrxdztkjvcc4uhlh5vgbmgap3mziwnga</dev:code>
				<dev:remarks>
					<maml:para>Allows you to provide all the information on the command line.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Add-TeamAccount -Account http://localtfs:8080/tfs/DefaultCollection -UseWindowsAuthentication</dev:code>
				<dev:remarks>
					<maml:para>On Windows, allows you use to use Windows authentication against a local TFS server.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!-- Links-->
			<maml:navigationLink>
				<maml:linkText>Add-TeamAccount</maml:linkText>
				<maml:uri/>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Clear-DefaultProject</command:name>
			<maml:description>
				<maml:para>Clears the value stored in the default project parameter value.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Clear</command:verb>
			<command:noun>DefaultProject</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Clears the value stored in the default project parameter value.</maml:para>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Clear-DefaultProject</maml:name>
				<command:parameter required="false" pipelineinput="false" globbing="false" position="named" aliases="">
					<!--Dynamic-->
					<maml:name>Level</maml:name>
					<maml:description>
						<maml:para>On Windows allows you to clear your default project at the Process, User or Machine levels.</maml:para>
					</maml:description>
					<command:parameterValue required="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<!--Dynamic-->
				<maml:name>Level</maml:name>
				<maml:description>
					<maml:para>On Windows allows you to clear your default project at the Process, User or Machine levels.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:examples>
			<!-- Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Clear-Project</dev:code>
				<dev:remarks>
					<maml:para>This will clear the default project parameter value. You will now have to
provide a project for any functions that require a project.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!-- Links-->
			<maml:navigationLink>
				<maml:linkText>Set-Project
Add-TeamAccount</maml:linkText>
				<maml:uri/>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Get-Queue</command:name>
			<maml:description>
				<maml:para/>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>Queue</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para/>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-Queue</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
					<!--Dynamic-->
					<maml:name>ProjectName</maml:name>
					<maml:description>
						<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>QueueName</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>ActionFilter</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-Queue</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
					<!--Dynamic-->
					<maml:name>ProjectName</maml:name>
					<maml:description>
						<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="QueueID">
					<maml:name>Id</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>QueueName</maml:name>
				<maml:description>
					<maml:para/>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ActionFilter</maml:name>
				<maml:description>
					<maml:para/>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
				<!--Dynamic-->
				<maml:name>ProjectName</maml:name>
				<maml:description>
					<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="QueueID">
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para/>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!-- Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String
					</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!-- Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Get-ReleaseDefinition</command:name>
			<maml:description>
				<maml:para>Gets the release defintions for a team project.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>ReleaseDefinition</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-ReleaseDefinition function gets the release defintions for a team
project. The project name is a Dynamic Parameter which may not be displayed
in the syntax above but is mandatory.

With just a project name, this function gets all of the release definitions
for that team project. You can also specify a particular release defintion
by ID.</maml:para>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-ReleaseDefinition</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
					<!--Dynamic-->
					<maml:name>ProjectName</maml:name>
					<maml:description>
						<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Expand</maml:name>
					<maml:description>
						<maml:para>Specifies which property should be expanded in the list of Release
Definition (environments, artifacts, none).</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-ReleaseDefinition</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
					<!--Dynamic-->
					<maml:name>ProjectName</maml:name>
					<maml:description>
						<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="ReleaseDefinitionID">
					<maml:name>Id</maml:name>
					<maml:description>
						<maml:para>Specifies one or more release defintions by ID. To specify multiple IDs, use
commas to separate the IDs. To find the ID of a release defintion, type
Get-ReleaseDefinition.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32[]</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
				<!--Dynamic-->
				<maml:name>ProjectName</maml:name>
				<maml:description>
					<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>Expand</maml:name>
				<maml:description>
					<maml:para>Specifies which property should be expanded in the list of Release
Definition (environments, artifacts, none).</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="ReleaseDefinitionID">
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies one or more release defintions by ID. To specify multiple IDs, use
commas to separate the IDs. To find the ID of a release defintion, type
Get-ReleaseDefinition.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Int32[]</command:parameterValue>
				<dev:type>
					<maml:name>Int32[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!-- Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>Int[]</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!-- Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>Team.ReleaseDefinition</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!-- Notes-->
		</maml:alertSet>
		<command:examples>
			<!-- Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-ReleaseDefinition -ProjectName demo | Format-List *</dev:code>
				<dev:remarks>
					<maml:para>This command gets a list of all release definitions in the demo project. The
pipeline operator (|) passes the data to the Format-List cmdlet, which
displays all available properties (*) of the release defintion objects.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!-- Links-->
			<maml:navigationLink>
				<maml:linkText>Add-TeamAccount
				</maml:linkText>
				<maml:uri/>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText>Set-DefaultProject</maml:linkText>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText>Add-ReleaseDefinition</maml:linkText>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText>Remove-ReleaseDefinition</maml:linkText>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Get-ServiceEndpoint</command:name>
			<maml:description>
				<maml:para/>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>ServiceEndpoint</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para/>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-ServiceEndpoint</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
					<!--Dynamic-->
					<maml:name>ProjectName</maml:name>
					<maml:description>
						<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-ServiceEndpoint</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
					<!--Dynamic-->
					<maml:name>ProjectName</maml:name>
					<maml:description>
						<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named">
					<maml:name>Id</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
				<!--Dynamic-->
				<maml:name>ProjectName</maml:name>
				<maml:description>
					<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named">
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para/>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!-- Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String
					</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!-- Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Remove-Release</command:name>
			<maml:description>
				<maml:para>Removes the releases for a team project.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Remove</command:verb>
			<command:noun>Release</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Remove-Release function removes the releases for a
team project. The project name is a Dynamic Parameter which may not be
displayed in the syntax above but is mandatory.</maml:para>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Remove-Release</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
					<!--Dynamic-->
					<maml:name>ProjectName</maml:name>
					<maml:description>
						<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0">
					<maml:name>Id</maml:name>
					<maml:description>
						<maml:para>Specifies one or more releases by ID. To specify multiple IDs, use
commas to separate the IDs. To find the ID of a release defintion, type
Get-Release.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Force</maml:name>
					<maml:description>
						<maml:para>Removes the specified release defintion without prompting for confirmation.
By default, Remove-Release prompts for confirmation before
removing any release defintion.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0">
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies one or more releases by ID. To specify multiple IDs, use
commas to separate the IDs. To find the ID of a release defintion, type
Get-Release.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
				<dev:type>
					<maml:name>Int32[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Removes the specified release defintion without prompting for confirmation.
By default, Remove-Release prompts for confirmation before
removing any release defintion.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
				<!--Dynamic-->
				<maml:name>ProjectName</maml:name>
				<maml:description>
					<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!-- Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>You can pipe release defintion IDs to this function.</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!-- Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!-- Notes-->
			<maml:title/>
			<maml:alert>
				<maml:para>This function has a Dynamic Parameter for ProjectName that specifies the
project for which this function gets release s.

You can tab complete from a list of avaiable projects.

You can use Set-DefaultProject to set a default project so you do not have
to pass the ProjectName with each call.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!-- Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Release -ProjectName demo | Remove-Release</dev:code>
				<dev:remarks>
					<maml:para>This command gets a list of all release s in the demo project. The
pipeline operator (|) passes the data to the Remove-Release
function, which removes each release defintion object.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!-- Links-->
			<maml:navigationLink>
				<maml:linkText>Add-TeamAccount
Set-DefaultProject
Add-Release
Get-Release</maml:linkText>
				<maml:uri/>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Remove-ReleaseDefinition</command:name>
			<maml:description>
				<maml:para>Removes the release defintions for a team project.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Remove</command:verb>
			<command:noun>ReleaseDefinition</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Remove-ReleaseDefinition function removes the release defintions for a
team project. The project name is a Dynamic Parameter which may not be
displayed in the syntax above but is mandatory.</maml:para>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Remove-ReleaseDefinition</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
					<!--Dynamic-->
					<maml:name>ProjectName</maml:name>
					<maml:description>
						<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0">
					<maml:name>Id</maml:name>
					<maml:description>
						<maml:para>Specifies one or more release defintions by ID. To specify multiple IDs, use
commas to separate the IDs. To find the ID of a release defintion, type
Get-ReleaseDefinition.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Force</maml:name>
					<maml:description>
						<maml:para>Removes the specified release defintion without prompting for confirmation.
By default, Remove-ReleaseDefinition prompts for confirmation before
removing any release defintion.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0">
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies one or more release defintions by ID. To specify multiple IDs, use
commas to separate the IDs. To find the ID of a release defintion, type
Get-ReleaseDefinition.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
				<dev:type>
					<maml:name>Int32[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Removes the specified release defintion without prompting for confirmation.
By default, Remove-ReleaseDefinition prompts for confirmation before
removing any release defintion.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
				<!--Dynamic-->
				<maml:name>ProjectName</maml:name>
				<maml:description>
					<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!-- Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>You can pipe release defintion IDs to this function.</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!-- Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>None</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!-- Notes-->
			<maml:title/>
			<maml:alert>
				<maml:para>This function has a Dynamic Parameter for ProjectName that specifies the
project for which this function gets release definitions.

You can tab complete from a list of avaiable projects.

You can use Set-DefaultProject to set a default project so you do not have
to pass the ProjectName with each call.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!-- Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-ReleaseDefinition -ProjectName demo | Remove-ReleaseDefinition</dev:code>
				<dev:remarks>
					<maml:para>This command gets a list of all release definitions in the demo project. The
pipeline operator (|) passes the data to the Remove-ReleaseDefinition
function, which removes each release defintion object.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!-- Links-->
			<maml:navigationLink>
				<maml:linkText>Add-TeamAccount
Set-DefaultProject
Add-ReleaseDefinition
Get-ReleaseDefinition</maml:linkText>
				<maml:uri/>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Remove-ServiceEndpoint</command:name>
			<maml:description>
				<maml:para/>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Remove</command:verb>
			<command:noun>ServiceEndpoint</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para/>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Remove-ServiceEndpoint</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
					<!--Dynamic-->
					<maml:name>ProjectName</maml:name>
					<maml:description>
						<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0">
					<maml:name>Id</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Force</maml:name>
					<maml:description>
						<maml:para/>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0">
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para/>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para/>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
				<!--Dynamic-->
				<maml:name>ProjectName</maml:name>
				<maml:description>
					<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!-- Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String[]
System.String
					</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!-- Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Remove-Project</command:name>
			<maml:description>
				<maml:para>Deletes the Team Project from your Team Services account.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Remove</command:verb>
			<command:noun>Project</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>This will permanently delete your Team Project from your Team Services
account.

This function takes a DynamicParam for ProjectName that can be read from
the Pipeline by Property Name</maml:para>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Remove-Project</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
					<!--Dynamic-->
					<maml:name>Name</maml:name>
					<maml:description>
						<maml:para>Name of the project to remove.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Force</maml:name>
					<maml:description>
						<maml:para>Deletes the specified project without prompting for confirmation.
By default, Remove-Project prompts for confirmation before deleting
the project.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Deletes the specified project without prompting for confirmation.
By default, Remove-Project prompts for confirmation before deleting
the project.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
				<!--Dynamic-->
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Name of the project to remove.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!-- Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:examples>
			<!-- Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Remove-Project &#39;MyProject&#39;</dev:code>
				<dev:remarks>
					<maml:para>You will be prompted for confirmation and the project will be deleted.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Remove-Project &#39;MyProject&#39; -Force</dev:code>
				<dev:remarks>
					<maml:para>You will NOT be prompted for confirmation and the project will be deleted.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Project | Remove-Project -Force</dev:code>
				<dev:remarks>
					<maml:para>This will remove all projects</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!-- Links-->
			<maml:navigationLink>
				<maml:linkText>Add-TeamAccount
Add-Project</maml:linkText>
				<maml:uri/>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Get-TeamInfo</command:name>
			<maml:description>
				<maml:para>Displays your current account and default project.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>TeamInfo</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para/>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-TeamInfo</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
		</command:parameters>
		<command:examples>
			<!-- Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-TeamInfo</dev:code>
				<dev:remarks>
					<maml:para>This will display your current account and default project</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!-- Links-->
			<maml:navigationLink>
				<maml:linkText>Add-TeamAccount</maml:linkText>
				<maml:uri/>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Set-ReleaseStatus</command:name>
			<maml:description>
				<maml:para>Sets the status of a release to Active or Abandoned.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Set</command:verb>
			<command:noun>ReleaseStatus</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Set-ReleaseStatus lets you set the status of the release to Acitve or Abandoned.</maml:para>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Set-ReleaseStatus</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
					<!--Dynamic-->
					<maml:name>ProjectName</maml:name>
					<maml:description>
						<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
					<maml:name>Id</maml:name>
					<maml:description>
						<maml:para>Specifies one or more releases by ID. To specify multiple IDs, 
use commas to separate the IDs. To find the ID of a release
type Get-Release.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="">
					<maml:name>Status</maml:name>
					<maml:description>
						<maml:para>The status to set for the release Active or Abandoned.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<maml:name>Force</maml:name>
					<maml:description>
						<maml:para>Removes the specified build without prompting for confirmation.
By default, Set-ReleaseStatus prompts for confirmation before 
changing the status.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies one or more releases by ID. To specify multiple IDs, 
use commas to separate the IDs. To find the ID of a release
type Get-Release.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32[]</command:parameterValue>
				<dev:type>
					<maml:name>Int32[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="">
				<maml:name>Status</maml:name>
				<maml:description>
					<maml:para>The status to set for the release Active or Abandoned.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Removes the specified build without prompting for confirmation.
By default, Set-ReleaseStatus prompts for confirmation before 
changing the status.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
				<!--Dynamic-->
				<maml:name>ProjectName</maml:name>
				<maml:description>
					<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!-- Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.Int32[]
System.String
					</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!-- Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!-- Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Set-ReleaseStatus -Id 5 -status Abandoned</dev:code>
				<dev:remarks>
					<maml:para>This command will set the status of release with id 5 to Abandoned.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Remove-TeamAccount</command:name>
			<maml:description>
				<maml:para>Clears your default project, account name and personal access token.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Remove</command:verb>
			<command:noun>TeamAccount</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Clears the environment variables that hold your default project, account and personal access token.
You have to run Add-TeamAccount again before calling any other functions.

To remove from the Machine level you must be running PowerShell as administrator.</maml:para>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Remove-TeamAccount</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Force</maml:name>
					<maml:description>
						<maml:para>Forces the command without confirmation</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
					<!--Dynamic-->
					<maml:name>Level</maml:name>
					<maml:description>
						<maml:para>On Windows allows you to clear your account information at the Process, User or Machine levels.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<!--Dynamic-->
				<maml:name>Level</maml:name>
				<maml:description>
					<maml:para>On Windows allows you to clear your account information at the Process, User or Machine levels.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Forces the command without confirmation</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:examples>
			<!-- Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Remove-TeamAccount</dev:code>
				<dev:remarks>
					<maml:para>This will clear your account name and personal access token.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!-- Links-->
			<maml:navigationLink>
				<maml:linkText>Add-TeamAccount</maml:linkText>
				<maml:uri/>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Update-Project</command:name>
			<maml:description>
				<maml:para>Updates the name and/or description of a team project.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Update</command:verb>
			<command:noun>Project</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>You can pass just name, description or both.</maml:para>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Update-Project</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
					<!--Dynamic-->
					<maml:name>Name</maml:name>
					<maml:description>
						<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
					<maml:name>NewName</maml:name>
					<maml:description>
						<maml:para>The new name for the project.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="">
					<maml:name>NewDescription</maml:name>
					<maml:description>
						<maml:para>The new description for the project.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
				<maml:name>NewName</maml:name>
				<maml:description>
					<maml:para>The new name for the project.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="">
				<maml:name>NewDescription</maml:name>
				<maml:description>
					<maml:para>The new description for the project.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
				<!--Dynamic-->
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!-- Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String
					</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!-- Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!-- Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Update-Project -Name Demo -NewName aspDemo</dev:code>
				<dev:remarks>
					<maml:para>This command changes the name of your project from Demo to aspDemo.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Set-DefaultProject</command:name>
			<maml:description>
				<maml:para>Sets the default project to be used with other calls in the module.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Set</command:verb>
			<command:noun>DefaultProject</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The majority of the functions in this module require a project name. By setting a default project you can omit that parameter from your function calls and this default will be used instead.</maml:para>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Set-DefaultProject</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
					<!--Dynamic-->
					<maml:name>Project</maml:name>
					<maml:description>
						<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" pipelineinput="false" globbing="false" position="named">
					<!--Dynamic-->
					<maml:name>Level</maml:name>
					<maml:description>
						<maml:para>On Windows allows you to store your default project at the Process, User or Machine levels.  When saved at the User or Machine level your default project will be in any future PowerShell processes.</maml:para>
					</maml:description>
					<command:parameterValue required="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="">
				<!--Dynamic-->
				<maml:name>Project</maml:name>
				<maml:description>
					<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<!--Dynamic-->
				<maml:name>Level</maml:name>
				<maml:description>
					<maml:para>On Windows allows you to store your default project at the Process, User or Machine levels.  When saved at the User or Machine level your default project will be in any future PowerShell processes.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!-- Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String
					</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!-- Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<maml:title>Dynamic Parameters</maml:title>
			<!-- Notes-->
			<maml:alert>
				<maml:para>Setting a default project also enables tab completeion of dynamic parameters when you call Add-Build.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!-- Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Set-DefaultProject Demo</dev:code>
				<dev:remarks>
					<maml:para>This command sets Demo as the default project. You can now call other functions that require a project name without passing the project.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<!-- Generated by: SAPIEN PowerShell HelpWriter 2016 v1.1.20-->
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Get-GitRepository</command:name>
			<maml:description>
				<maml:para>Get all the repositories in your Visual Studio Team Services or Team Founcation Server account, or a specific project.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>GitRepository</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Get-GitRepository gets all the repositories in your Visual Studio Team Services or Team Founcation Server account, or a specific project.</maml:para>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-GitRepository</maml:name>
				<command:parameter required="false" pipelineinput="True (ByPropertyName)" globbing="false" position="named" aliases="">
					<!--Dynamic-->
					<maml:name>ProjectName</maml:name>
					<maml:description>
						<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
					</maml:description>
					<command:parameterValue required="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" pipelineinput="True (ByPropertyName)" globbing="false" position="named" aliases="RepositoryID">
					<maml:name>Id</maml:name>
					<maml:description>
						<maml:para>Specifies one or more repositories by ID. To specify multiple IDs, use
commas to separate the IDs. To find the ID of a repository, type
Get-Repository.</maml:para>
					</maml:description>
					<command:parameterValue required="false">Guid[]</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="">
				<!--Dynamic-->
				<maml:name>ProjectName</maml:name>
				<maml:description>
					<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="RepositoryID">
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies one or more repositories by ID. To specify multiple IDs, use
commas to separate the IDs. To find the ID of a repository, type
Get-Repository.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Guid[]</command:parameterValue>
				<dev:type>
					<maml:name>Int32[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:examples>
			<!-- Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-GitRepository</dev:code>
				<dev:remarks>
					<maml:para>This command returns all the Git repositories for your TFS or Team Services account.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-GitRepository -ProjectName Demo</dev:code>
				<dev:remarks>
					<maml:para>This command returns all the Git repositories for the Demo team project.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>git clone (Get-GitRepository | select -ExpandProperty remoteurl)</dev:code>
				<dev:remarks>
					<maml:para>This command gets the remote URL and passes it to git clone command.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Add-GitRepository</command:name>
			<maml:description>
				<maml:para>Adds a Git repository to your Visual Studio Team Services or Team Founcation Server account.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Add</command:verb>
			<command:noun>GitRepository</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Add-GitRepository adds a Git repository to your Visual Studio Team Services or Team Founcation Server account.</maml:para>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Add-GitRepository</maml:name>
				<command:parameter required="false" pipelineinput="True (ByPropertyName)" globbing="false" position="named" aliases="">
					<!--Dynamic-->
					<maml:name>ProjectName</maml:name>
					<maml:description>
						<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
					</maml:description>
					<command:parameterValue required="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" pipelineinput="True (ByPropertyName)" globbing="false" position="named" aliases="RepositoryID">
					<maml:name>Name</maml:name>
					<maml:description>
						<maml:para>Specifies the name of the repository.</maml:para>
					</maml:description>
					<command:parameterValue required="false">System.String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="">
				<!--Dynamic-->
				<maml:name>ProjectName</maml:name>
				<maml:description>
					<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="RepositoryID">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Specifies the name of the repository.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">System.String</command:parameterValue>
				<dev:type>
					<maml:name>Int32[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
		</command:parameters>
		<command:examples>
			<!-- Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Add-GitRepository -ProjectName Demo -Name Temp</dev:code>
				<dev:remarks>
					<maml:para>This command adds a new repository named Temp to the Demo project.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!-- Command-->
		<command:details>
			<command:name>Remove-GitRepository</command:name>
			<maml:description>
				<maml:para>Removes the Git repository from your Visual Studio Team Services or Team Founcation Server account.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Remove</command:verb>
			<command:noun>GitRepository</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Remove-GitRepository removes the Git repository from your Visual Studio Team Services or Team Founcation Server account.</maml:para>
		</maml:description>
		<command:syntax>
			<!-- Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Remove-GitRepository</maml:name>
				<command:parameter required="false" pipelineinput="True (ByPropertyName)" globbing="false" position="named" aliases="">
					<!--Dynamic-->
					<maml:name>ProjectName</maml:name>
					<maml:description>
						<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
					</maml:description>
					<command:parameterValue required="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" pipelineinput="True (ByPropertyName)" globbing="false" position="named" aliases="RepositoryID">
					<maml:name>Id</maml:name>
					<maml:description>
						<maml:para>Specifies one or more repositories by ID. To specify multiple IDs, use
commas to separate the IDs. To find the ID of a repository, type
Get-Repository.</maml:para>
					</maml:description>
					<command:parameterValue required="false">Guid[]</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="false" pipelineinput="false" globbing="false" position="named">
					<maml:name>Force</maml:name>
					<maml:description>
						<maml:para>Removes the specified repository without prompting for confirmation.
By default, Remove-GitRepository prompts for confirmation before
removing any repository.</maml:para>
					</maml:description>
					<command:parameterValue required="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!-- All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="">
				<!--Dynamic-->
				<maml:name>ProjectName</maml:name>
				<maml:description>
					<maml:para>Specifies the team project for which this function operates.

You can tab complete from a list of available projects.

You can use Set-DefaultProject to set a default project so
you do not have to pass the ProjectName with each call.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="RepositoryID">
				<maml:name>Id</maml:name>
				<maml:description>
					<maml:para>Specifies one or more repositories by ID. To specify multiple IDs, use
commas to separate the IDs. To find the ID of a repository, type
Get-Repository.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Guid[]</command:parameterValue>
				<dev:type>
					<maml:name>Int32[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Removes the specified repository without prompting for confirmation.
By default, Remove-GitRepository prompts for confirmation before
removing any repository.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:examples>
			<!-- Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Remove-GitRepository -Id 687c53f8-1a82-4e89-9a86-13d51bc4a8d5</dev:code>
				<dev:remarks>
					<maml:para>This command removes all the Git repositories for your TFS or Team Services account.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<!-- Edited with: SAPIEN PowerShell HelpWriter 2016 v1.1.20-->
</helpItems>